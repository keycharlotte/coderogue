name: Deploy Statistics Visualization

on:
  push:
    branches: [ main, master ]
    paths:
      - 'stats_visualization.html'
      - 'historical_stats.json'
      - 'VISUALIZATION_GUIDE.md'
      - 'index.html'
      - '*.ps1'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: windows-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史以便生成历史统计
        
    - name: Generate latest statistics and visualization
      shell: pwsh
      run: |
        # 生成最新的项目统计
        Write-Host "📊 Generating project statistics..."
        .\project_stats.ps1
        
        # 生成历史统计数据（使用Git历史）
        Write-Host "📈 Generating historical statistics..."
        .\generate_historical_stats.ps1 -DaysBack 180 -UseGitHistory
        
        # 更新可视化数据
        Write-Host "🎨 Updating visualization data..."
        .\update_stats_with_visualization.ps1 -GenerateVisualization -HistoryDays 180
        
        # 验证文件存在
        if (Test-Path "stats_visualization.html") {
            Write-Host "✅ Visualization HTML file exists"
        } else {
            Write-Error "❌ Visualization HTML file not found"
        }
        
        if (Test-Path "historical_stats.json") {
            Write-Host "✅ Historical stats JSON file exists"
        } else {
            Write-Error "❌ Historical stats JSON file not found"
        }
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Create deployment directory
      shell: pwsh
      run: |
        # 创建部署目录
        New-Item -ItemType Directory -Force -Path "_site"
        
        # 复制可视化文件
        Copy-Item "stats_visualization.html" "_site/index.html"
        Copy-Item "historical_stats.json" "_site/"
        Copy-Item "VISUALIZATION_GUIDE.md" "_site/"
        
        # 创建简单的导航页面 - 使用简单的文本方式避免YAML语法冲突
        $timestamp = Get-Date -Format 'yyyy-MM-dd HH:mm:ss'
        
        # 直接复制stats_visualization.html作为主页，并创建简单的导航文件
        "CodeRogue 项目统计导航 - 更新时间: $timestamp" | Out-File -FilePath "_site/navigation.txt" -Encoding UTF8
        "" | Add-Content -Path "_site/navigation.txt"
        "可用页面:" | Add-Content -Path "_site/navigation.txt"
        "1. 项目统计可视化: stats_visualization.html" | Add-Content -Path "_site/navigation.txt"
        "2. 可视化指南: VISUALIZATION_GUIDE.md" | Add-Content -Path "_site/navigation.txt"
        
        Write-Host "📁 Deployment files created:"
        Get-ChildItem "_site" | ForEach-Object { Write-Host "  - $($_.Name)" }
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Output deployment URL
      shell: pwsh
      run: |
        Write-Host "🚀 Visualization deployed successfully!"
        Write-Host "📊 View at: ${{ steps.deployment.outputs.page_url }}"
        Write-Host "📈 Direct chart access: ${{ steps.deployment.outputs.page_url }}stats_visualization.html"